# This file was originally generated by mbed.org. For more information,
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded
#
# Then this file was modified to build the PyMite VM
#

GCC_BIN =
PROJECT = p14p_mbed
OBJECTS =
SYS_OBJECTS = ./mbed/LPC1768/GCC_ARM/startup_LPC17xx.o \
              ./mbed/LPC1768/GCC_ARM/cmsis_nvic.o \
              ./mbed/LPC1768/GCC_ARM/core_cm3.o \
              ./mbed/LPC1768/GCC_ARM/system_LPC17xx.o
CINCS = -I$(abspath .) -I./mbed -I./mbed/LPC1768 -I./mbed/LPC1768/GCC_ARM -I../../vm
LIBRARY_PATHS = -L. -L./mbed -L./mbed/LPC1768 -L./mbed/LPC1768/GCC_ARM -L../../vm
LIBRARIES = -lmbed -lcapi
LINKER_SCRIPT = mbed/LPC1768/GCC_ARM/LPC1768.ld

################################################################################
# PyMite Configuration
PLATFORM := $(notdir $(CURDIR))
PM_LIB_ROOT = pmvm_$(PLATFORM)
PM_LIB_FN = lib$(PM_LIB_ROOT).a
PM_LIB_PATH = ../../vm/$(PM_LIB_FN)
PM_USR_SOURCES = main.py mbed.py
PMIMGCREATOR := ../../tools/pmImgCreator.py
PMGENPMFEATURES := ../../tools/pmGenPmFeatures.py
IPM := true
ZIP_FILES := src/vm/*.c src/vm/*.h src/platform/mbed/main.cpp \
    src/platform/mbed/plat.cpp  src/platform/mbed/plat.h \
    src/platform/mbed/pmfeatures.h

SRC = $(PROJECT)_nat.c $(PROJECT)_img.c
OBJECTS += $(SRC:.c=.o)
CPPSRC = main.cpp plat.cpp
OBJECTS += $(CPPSRC:.cpp=.o)
LIBRARIES += -l$(PM_LIB_ROOT)


################################################################################
CC = $(GCC_BIN)arm-none-eabi-g++
CPP = $(GCC_BIN)arm-none-eabi-g++
CFLAGS = -c -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions \
         -mcpu=cortex-m3 -mthumb -ffunction-sections -fdata-sections \
         $(CINCS)
ONLY_C_FLAGS = -std=gnu99
ONLY_CPP_FLAGS = -std=gnu++98
CC_SYMBOLS = -DTARGET_LPC1768 -DTOOLCHAIN_GCC_ARM -DNDEBUG

AR = $(GCC_BIN)arm-none-eabi-ar
AS = $(GCC_BIN)arm-none-eabi-as

LD = $(GCC_BIN)arm-none-eabi-g++
LD_FLAGS = -mcpu=cortex-m3 -mthumb -Wl,--gc-sections
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc

OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy

################################################################################
# PyMite Rules

all: local_build cloud

cloud: zip

local_build: pmfeatures.h pmvm $(PROJECT).bin

pmfeatures.h: pmfeatures.py $(PMGENPMFEATURES)
	$(PMGENPMFEATURES) pmfeatures.py > $@

# PyMite: Build the VM archive if it doesn't exist
pmvm : $(PM_LIB_PATH)

$(PM_LIB_PATH) :
	make -C ../../vm

# PyMite: Generate native code and module images from the python source
$(PROJECT)_nat.c $(PROJECT)_img.c : $(PM_USR_SOURCES) pmfeatures.py
	$(PMIMGCREATOR) -f pmfeatures.py -c -u -o $(PROJECT)_img.c --native-file=$(PROJECT)_nat.c $(PM_USR_SOURCES)

../../vm/pmstdlib_img.c ../../vm/pmstdlib_nat.c :
	$(MAKE) -C ../../vm pmstdlib_img.c pmstdlib_nat.c

zip: $(PROJECT).zip

$(PROJECT).zip: $(PROJECT)_nat.c $(PROJECT)_img.c ../../vm/pmstdlib_img.c ../../vm/pmstdlib_nat.c pmfeatures.h
	$(RM) $@
	cd ../../.. && zip src/platform/mbed/$@  $(ZIP_FILES)


################################################################################


clean:
	$(MAKE) -C ../../vm clean
	rm -f pmfeatures.h $(PROJECT).bin $(PROJECT).elf $(OBJECTS) $(PROJECT)_nat.c $(PROJECT)_img.c

.s.o:
	$(AS)  $(CFLAGS) $(CC_SYMBOLS) -o $@ $<

.c.o:
	$(CC)  $(CFLAGS) $(CC_SYMBOLS) $(ONLY_C_FLAGS)   -o $@ $<

.cpp.o:
	$(CPP) $(CFLAGS) $(CC_SYMBOLS) $(ONLY_CPP_FLAGS) -o $@ $<


$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS)

$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@


export AR CC CFLAGS IPM PM_LIB_FN

.PHONY : all pmvm zip
